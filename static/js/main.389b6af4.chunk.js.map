{"version":3,"sources":["actions/logActions.js","actions/types.js","components/layout/SearchBar.js","components/layout/Preloader.js","components/logs/LogItem.js","components/logs/Logs.js","components/layout/AddBtn.js","actions/techActions.js","components/techs/TechSelectOptions.js","components/logs/AddLogModal.js","components/logs/EditLogModal.js","components/techs/AddTechModal.js","components/techs/TechItem.js","components/techs/TechListModal.js","reducers/logReducer.js","reducers/techReducer.js","reducers/index.js","store.js","App.js","index.js"],"names":["setLoading","type","connect","searchLogs","text","dispatch","a","fetch","res","json","data","payload","response","statusText","useRef","style","marginBottom","className","id","placeholder","ref","onChange","e","current","value","for","class","Preloader","deleteLog","method","setCurrent","log","href","attention","onClick","message","tech","format","date","M","toast","html","state","getLogs","logs","loading","useEffect","length","map","key","AddBtn","getTechs","techs","t","firstName","lastName","modalStyle","width","height","addLog","body","JSON","stringify","headers","useState","setMessage","setAttention","setTech","name","target","htmlFor","disabled","checked","newLog","Date","updateLog","updLog","addTech","setfirstName","setLastName","deleteTech","initialState","error","combineReducers","action","filter","console","middleWare","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","AutoInit","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.389b6af4.chunk.js","sourcesContent":["import {\r\n    GET_LOGS, \r\n    SET_LOADING, \r\n    LOGS_ERROR, \r\n    ADD_LOG, \r\n    DELETE_LOG, \r\n    UPDATE_LOG, \r\n    SEARCH_LOGS, \r\n    SET_CURRENT, \r\n    CLEAR_CURRENT} from './types';\r\n\r\n//get logs from server\r\nexport const getLogs = () => async dispatch =>{\r\n    try {\r\n        setLoading();\r\n\r\n        const res = await fetch('/logs');\r\n        const data = await res.json();\r\n\r\n        dispatch({\r\n            type: GET_LOGS,\r\n            payload: data\r\n        }) \r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGS_ERROR,\r\n            payload: err.response.statusText\r\n        }) \r\n    }\r\n}\r\n\r\n// Add new log\r\nexport const addLog  = (log) => async dispatch =>{\r\n    try {\r\n        setLoading();\r\n\r\n        const res = await fetch('/logs', {\r\n            method: 'POST',\r\n            body: JSON.stringify(log),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n        const data = await res.json();\r\n\r\n        dispatch({\r\n            type: ADD_LOG,\r\n            payload: data\r\n        }) \r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGS_ERROR,\r\n            payload: err.response.statusText\r\n        }) \r\n    }\r\n}\r\n\r\n// Delete log from server\r\nexport const deleteLog = (id) => async dispatch =>{\r\n    try {\r\n        setLoading();\r\n\r\n        await fetch(`logs/${id}`,{\r\n            method:'DELETE'\r\n        });\r\n\r\n        dispatch({\r\n            type: DELETE_LOG,\r\n            payload: id\r\n        }) \r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGS_ERROR,\r\n            payload: err.response.statusText\r\n        }) \r\n    }\r\n}\r\n\r\n// update log\r\nexport const updateLog = log => async dispatch => {\r\n    try {\r\n      setLoading();\r\n  \r\n      const res = await fetch(`/logs/${log.id}`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(log),\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n  \r\n      const data = await res.json();\r\n  \r\n      dispatch({\r\n        type: UPDATE_LOG,\r\n        payload: data\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: LOGS_ERROR,\r\n        payload: err.response.statusText\r\n      });\r\n    }\r\n  };\r\n// Search logs\r\nexport const searchLogs = text => async dispatch => {\r\n    try {\r\n      setLoading();\r\n  \r\n      const res = await fetch(`/logs?q=${text}`);\r\n      const data = await res.json();\r\n  \r\n      dispatch({\r\n        type: SEARCH_LOGS,\r\n        payload: data\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: LOGS_ERROR,\r\n        payload: err.response.statusText\r\n      });\r\n    }\r\n  };\r\n  //set current log\r\nexport const setCurrent = log => {\r\nreturn {\r\n    type: SET_CURRENT,\r\n    payload: log \r\n    };\r\n};\r\n// clear current log\r\nexport const clearCurrent = () => {\r\n    return {\r\n      type: CLEAR_CURRENT\r\n    };\r\n  };\r\n\r\n  //set loading to true\r\nexport const setLoading = () => {\r\n    return {\r\n        type: SET_LOADING\r\n    }\r\n}","export const GET_LOGS = 'GET_LOGS';\r\nexport const ADD_LOG = 'ADD_LOG';\r\nexport const DELETE_LOG = 'DELETE_LOG';\r\nexport const SET_CURRENT = 'SET_CURRENT';\r\nexport const CLEAR_CURRENT = 'CLEAR_CURRENT';\r\nexport const UPDATE_LOG = 'UPDATE_LOG';\r\nexport const CLEAR_LOGS = 'CLEAR_LOGS';\r\nexport const SET_LOADING = 'SET_LOADING';\r\nexport const LOGS_ERROR = 'LOGS_ERROR';\r\nexport const SEARCH_LOGS = 'SEARCH_LOGS';\r\nexport const GET_TECHS = 'GET_TECHS';\r\nexport const ADD_TECH = 'ADD_TECH';\r\nexport const DELETE_TECH = 'DELETE_TECHS';\r\nexport const TECHS_ERROR = 'TECHS_ERROR';","import React, { useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { searchLogs } from '../../actions/logActions';\r\n\r\nconst SearchBar = ({searchLogs}) => {\r\n    const text = useRef('')\r\n\r\n    const onChange = e => {\r\n        searchLogs(text.current.value)\r\n    }\r\n\r\n    return (\r\n        <nav style={{marginBottom: '30px'}} className=\"nav\">\r\n            <div className=\"nav-wrapper\">\r\n                <form>\r\n                    <div className=\"input-field\">\r\n                    <input \r\n                    id=\"search\" \r\n                    type=\"search\"\r\n                    placeholder='Search logs...'\r\n                    ref={text}\r\n                    onChange={onChange} \r\n                    />\r\n                    <label className=\"label-icon\" for=\"search\"><i class=\"material-icons\">search</i></label>\r\n                    <i className=\"material-icons\">close</i>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\nSearchBar.propTypes = {\r\n    searchLogs: PropTypes.func.isRequired\r\n  };\r\n  \r\n  export default connect(\r\n    null,\r\n    { searchLogs }\r\n  )(SearchBar);","import React from 'react'\r\n\r\nexport const Preloader = () => {\r\n    return (\r\n        <div className=\"progress blue lighten-4\">\r\n            <div className='indeterminate blue'></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader\r\n","import React from 'react';\r\nimport Moment from 'react-moment'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { deleteLog, setCurrent} from '../../actions/logActions'\r\n\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst LogItem = ({log, deleteLog, setCurrent}) => {\r\n    const onDelete = () => {\r\n        deleteLog(log.id);\r\n        M.toast({html: 'Log Deleted'})\r\n    }\r\n    return (\r\n        <li className=\"collection-item\">\r\n            <div>\r\n                <a \r\n                    href=\"#edit-log-modal\" \r\n                    className={`modal-trigger ${\r\n                     log.attention ? 'red-text' : 'blue-text'\r\n                    }`}\r\n                    onClick={() => setCurrent(log)}\r\n\r\n                    >\r\n                    {log.message}   \r\n                </a>\r\n                <br/>\r\n                <span className='grey-text'>\r\n                    <span className='black-text'>ID: {log.id}</span> last updated by{' '}\r\n                    <span className='black-text'>{log.tech}</span>{' '}\r\n                    on <Moment format=\"MMM Do YYYY, h:mm a\">{log.date}</Moment>\r\n                </span>\r\n                <a href=\"#!\" onClick={onDelete} className=\"secondary-content\">\r\n                    <i className=\"material-icons grey-text\">delete</i>\r\n                </a>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nLogItem.propTypes = {\r\n    log: PropTypes.object.isRequired,\r\n    deleteLog: PropTypes.func.isRequired,\r\n    setCurrent: PropTypes.func.isRequired\r\n}\r\n\r\nexport default  connect(null, {deleteLog, setCurrent})(LogItem)\r\n","import React, {useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Preloader from '../layout/Preloader';\r\nimport LogItem from './LogItem';\r\nimport PropTypes from 'prop-types'\r\nimport { getLogs } from '../../actions/logActions';\r\n\r\nconst Logs = ({log: {logs, loading}, getLogs}) => {\r\n    useEffect(() => {\r\n        getLogs();\r\n        //eslint-disable-next-line\r\n    }, []);\r\n\r\n    if(loading || logs === null){\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <ul className=\"collection with-header\">\r\n            <li className=\"collection-header\">\r\n                <h4 className=\"center\">System Logs</h4>\r\n            </li>\r\n            {!loading && logs.length === 0 ? (<p className=\"center\">No logs yet...</p>) : (\r\n                logs.map(log => <LogItem log={log} key={log.id}/>)\r\n            )}\r\n        </ul> \r\n    )\r\n}\r\n\r\n\r\nLogs.propTypes  = {\r\n    log: PropTypes.object.isRequired,\r\n    getLogs: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    log: state.log\r\n})\r\n\r\nexport default connect(mapStateToProps, {getLogs})(Logs)\r\n","import React from 'react'\r\n\r\nconst AddBtn = () => {\r\n    return (\r\n        <div className='fixed-action-btn'>\r\n            <a href=\"#add-log-modal\" className=\"btn-floating btn-large blue darken-2\r\n            modal-trigger\">\r\n                <i className='large material-icons'>add</i>\r\n            </a>           \r\n            <ul>\r\n                <li>\r\n                    <a href=\"#tech-list-modal\" className=\"btn-floating green modal-trigger\"> \r\n                        <i className='material-icons'>person</i>\r\n                    </a>\r\n                </li>\r\n                <li>\r\n                    <a href=\"#add-tech-modal\" className=\"btn-floating red modal-trigger\"> \r\n                        <i className='material-icons'>person_add</i>\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddBtn\r\n","import {\r\n    GET_TECHS, \r\n    ADD_TECH, \r\n    DELETE_TECH, \r\n    SET_LOADING, \r\n    TECHS_ERROR} from './types';\r\n\r\n// Get techs from server\r\nexport const getTechs = () => async dispatch => {\r\n\r\n    try {\r\n        setLoading();\r\n\r\n        const res = await fetch('/techs')\r\n        const data = await res.json()\r\n\r\n        dispatch({\r\n        type: GET_TECHS,\r\n        payload: data\r\n        });\r\n    }catch (err) {\r\n        dispatch({\r\n        type: TECHS_ERROR,\r\n        payload: err.response.statusText\r\n        });\r\n    }\r\n};\r\n\r\n// Add technician \r\nexport const addTech = tech => async dispatch => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch('/techs', {\r\n      method: 'POST',\r\n      body: JSON.stringify(tech),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: ADD_TECH,\r\n      payload: data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: TECHS_ERROR,\r\n      payload: err.response.statusText\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteTech = id => async dispatch => {\r\n    try {\r\n    setLoading()\r\n\r\n    await fetch(`/techs/${id}`, {\r\n        method: 'DELETE'\r\n    });\r\n\r\n    dispatch({\r\n        type: DELETE_TECH,\r\n        payload: id\r\n    });\r\n    } catch (err) {\r\n        dispatch({\r\n\r\n            type: TECHS_ERROR,\r\n            payload: err.response.statusText\r\n        })\r\n    }\r\n};\r\n\r\n// Set loading to true\r\nexport const setLoading = () => {\r\n  return {\r\n    type: SET_LOADING\r\n  };\r\n};","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { getTechs } from '../../actions/techActions'\r\n\r\nconst TechSelectOptions = ({ getTechs, tech: { techs, loading } }) => {\r\n  useEffect(() => {\r\n    getTechs();\r\n\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    !loading &&\r\n    techs !== null &&\r\n    techs.map(t => (\r\n      <option key={t.id} value={`${t.firstName} ${t.lastName}`}>\r\n        {t.firstName} {t.lastName}\r\n      </option>\r\n    ))\r\n  );\r\n};\r\n\r\nTechSelectOptions.propTypes = {\r\n\r\n    tech: PropTypes.object.isRequired,\r\n    getTechs: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    tech: state.tech\r\n});\r\n\r\nexport default connect(mapStateToProps,{ getTechs })(TechSelectOptions);","import React, {useState} from 'react';\r\nimport TechSelectOptions from '../techs/TechSelectOptions';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {addLog} from '../../actions/logActions'\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst AddLogModal = ({addLog}) => {\r\n    const [message, setMessage] = useState('');\r\n    const [attention, setAttention] = useState(false);\r\n    const [tech, setTech] = useState('');\r\n\r\n    const onSubmit = () => {\r\n        if(message === '' || tech === ''){\r\n            M.toast({html: 'Please enter a message and tech'})\r\n        }else{\r\n            const newLog = {\r\n                message,\r\n                attention,\r\n                tech,\r\n                date: new Date()\r\n            };\r\n\r\n            addLog(newLog);\r\n\r\n            M.toast({ html: `Log added by ${tech}`})\r\n\r\n            //clears field\r\n            setMessage('');\r\n            setTech(' ');\r\n            setAttention(false);\r\n        }\r\n    };\r\n    return (\r\n        <div id='add-log-modal' className=\"modal\" style={modalStyle}>\r\n            <div className='modal-content'>\r\n                <h4>Enter System Log</h4>\r\n                <div className='row'>\r\n                    <div className='input-field'>\r\n                        <input \r\n                            type='text' \r\n                            name='message' \r\n                            value={message} \r\n                            onChange={e => setMessage(e.target.value)}\r\n                        />\r\n                        <label htmlFor=\"message\" className=\"active\">\r\n                            Log Message\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"input-field\">\r\n                        <select \r\n                            name=\"tech \" \r\n                            value={tech} className='browser-default' onChange={e => \r\n                            setTech(e.target.value)}\r\n                        >\r\n                            <option value=\"\" disabled>\r\n                                Select Technician\r\n                            </option>\r\n                            <TechSelectOptions />\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <p>\r\n                        <label>\r\n                            <input \r\n                            type=\"checkbox\" \r\n                            className=\"filled-in\" \r\n                            checked={attention} \r\n                            value={attention}\r\n                            onChange={e => setAttention(!attention)} \r\n                            />\r\n                            <span>Needs Attention</span>\r\n                        </label>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n                <a \r\n                    href=\"#!\" \r\n                    onClick={onSubmit} \r\n                    className=\"modal-close waves-effect waves-light btn\"\r\n                >  \r\n                    Enter \r\n                </a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n \r\nAddLogModal.propTypes = {\r\n    addLog: PropTypes.func.isRequired\r\n}\r\n\r\nconst modalStyle = {\r\n    width: '75%',\r\n    height: '75'\r\n}\r\nexport default connect(null, { addLog }) (AddLogModal);\r\n","import React, { useState, useEffect } from 'react';\r\nimport TechSelectOptions from '../techs/TechSelectOptions';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\nimport { updateLog } from '../../actions/logActions';\r\n\r\n\r\nconst EditLogModal = ({current, updateLog}) => {\r\n    const [message, setMessage] = useState('');\r\n    const [attention, setAttention] = useState(false)\r\n    const [tech, setTech] = useState('')\r\n  \r\n    useEffect(() => {\r\n      if (current) {\r\n        setMessage(current.message);\r\n        setAttention(current.attention);\r\n        setTech(current.tech);\r\n      }\r\n    }, [current]);\r\n    const onSubmit = () => {\r\n        if (message === '' || tech === '') {\r\n          M.toast({ html: 'Please enter a message and tech' });\r\n        }\r\n         else {\r\n            const updLog = {\r\n                id: current.id,\r\n                message,\r\n                attention,\r\n                tech,\r\n                date: new Date()\r\n            };\r\n\r\n            updateLog(updLog);\r\n            M.toast({ html: `Log updated by ${tech}` });\r\n\r\n            //clera fields\r\n            setMessage('');\r\n            setTech('');\r\n            setAttention(false);\r\n        \r\n        }\r\n    }\r\n    return (\r\n        <div id='edit-log-modal' className=\"modal\" style={modalStyle}>\r\n            <div className='modal-content'>\r\n                <h4>Enter System Log</h4>\r\n                <div className='row'>\r\n                    <div className='input-field'>\r\n                        <input \r\n                            type='text' \r\n                            name='message' \r\n                            value={message} \r\n                            onChange={e => setMessage(e.target.value)}\r\n                            \r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"input-field\">\r\n                        <select \r\n                            name=\"tech \" \r\n                            value={tech} className='browser-default' onChange={e => \r\n                            setTech(e.target.value)}\r\n                        >\r\n                            <option value='' disabled>\r\n                                Select Technician\r\n                            </option>\r\n                            <TechSelectOptions />\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className='input-field'>\r\n                        <p>\r\n                            <label>\r\n                                <input \r\n                                type=\"checkbox\" \r\n                                className=\"filled-in\" \r\n                                checked={attention} \r\n                                value={attention}\r\n                                onChange={e => setAttention(!attention)} \r\n                                />\r\n                                <span>Needs Attention</span>\r\n                            </label>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"modal-footer\">\r\n                <a \r\n                    href=\"#!\" \r\n                    onClick={onSubmit} \r\n                    className=\"modal-close waves-effect waves-light btn\"\r\n                >  \r\n                    Enter \r\n                </a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst modalStyle = {\r\n    width: '75%',\r\n    height: '75'\r\n}\r\nEditLogModal.propTypes = {\r\n    current: PropTypes.object,\r\n    updateLog: PropTypes.func.isRequired\r\n  };\r\n\r\nconst mapStateToProps = state => ({\r\n    current: state.log.current\r\n})\r\nexport default connect(mapStateToProps, {updateLog})(EditLogModal);\r\n","import React, {useState} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { addTech } from '../../actions/techActions';\r\n\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst AddTechModal = ({addTech}) => {\r\n    const [firstName, setfirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n\r\n    const onSubmit = () => {\r\n        if(firstName === '' || lastName === ''){\r\n            M.toast({html: 'Please enter first and last names'})\r\n        }else{\r\n            addTech({\r\n                firstName,\r\n                lastName\r\n            })\r\n            M.toast({ html: `${firstName} ${lastName} was added as a tech` });\r\n\r\n            //clears field\r\n            setfirstName('');\r\n            setLastName('');\r\n        }\r\n    };\r\n    return (\r\n        <div id='add-tech-modal' className=\"modal\">\r\n            <div className='modal-content'>\r\n                <h4>New Technician</h4>\r\n                <div className='row'>\r\n                    <div className='input-field'>\r\n                        <input \r\n                            type='text' \r\n                            name='firstName' \r\n                            value={firstName} \r\n                            onChange={e => setfirstName(e.target.value)}\r\n                        />\r\n                        <label htmlFor=\"firstName\" className=\"active\">\r\n                            First Name\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='row'>\r\n                    <div className='input-field'>\r\n                        <input \r\n                            type='text' \r\n                            name='lastName' \r\n                            value={lastName} \r\n                            onChange={e => setLastName(e.target.value)}\r\n                        />\r\n                        <label htmlFor=\"lastName\" className=\"active\">\r\n                            Last Name\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n                                \r\n            </div>\r\n            <div className=\"modal-footer\">\r\n                <a \r\n                    href=\"#!\" \r\n                    onClick={onSubmit} \r\n                    className=\"modal-close waves-effect waves-light btn\"\r\n                >  \r\n                    Enter \r\n                </a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nAddTechModal.propTypes = {\r\n    addTech: PropTypes.func.isRequired\r\n};\r\n  \r\nexport default connect(null,{ addTech })(AddTechModal);","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { deleteTech } from '../../actions/techActions'\r\nimport M from 'materialize-css/dist/js/materialize.min.js'\r\n\r\nconst TechItem = ({ tech: { id, firstName, lastName }, deleteTech }) => {\r\n    const onDelete = () => {\r\n      deleteTech(id);\r\n      M.toast({ html: 'Technician deleted' })\r\n    }\r\n    return (\r\n        <li className='collection-item'>\r\n          <div>\r\n            {firstName} {lastName}\r\n            <a href='#!' className='secondary-content' onClick={onDelete}>\r\n              <i className='material-icons grey-text'>delete</i>\r\n            </a>\r\n          </div>\r\n        </li>\r\n      );\r\n    };\r\nTechItem.propTypes = {\r\n    tech: PropTypes.object.isRequired,\r\n    deleteTech: PropTypes.func.isRequired\r\n    };\r\n    \r\nexport default connect(null,{ deleteTech })(TechItem)","import React, {useEffect} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types'\r\nimport TechItem from './TechItem'\r\nimport { getTechs } from '../../actions/techActions'\r\n\r\nconst TechListModal = ({getTechs, tech: {techs, loading}}) => {\r\n    useEffect(() => {\r\n      getTechs();\r\n      // eslint-disable-next-line\r\n    }, []);\r\n\r\n    return (\r\n        <div id=\"tech-list-modal\" className='modal'>\r\n            <div className='modal-content'>\r\n                <h4>Technicians</h4>\r\n                <ul className='collection'>\r\n                    {!loading &&\r\n                    techs !== null && \r\n                    techs.map(tech => \r\n                        <TechItem tech={tech} key={tech.id}/>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nTechListModal.propTypes = {\r\n    tech: PropTypes.object.isRequired,\r\n    getTechs: PropTypes.func.isRequired\r\n  };\r\n  \r\n  const mapStateToProps = state => ({\r\n    tech: state.tech\r\n  });\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    { getTechs }\r\n  )(TechListModal);","import {GET_LOGS, SET_LOADING, LOGS_ERROR, ADD_LOG, DELETE_LOG, UPDATE_LOG, SEARCH_LOGS,   SET_CURRENT, CLEAR_CURRENT} from '../actions/types';\r\n\r\n\r\nconst initialState = {\r\n    logs: null,\r\n    current: null,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch(action.type){\r\n        case GET_LOGS:\r\n            return{\r\n                ...state,\r\n                logs: action.payload,\r\n                loading: false\r\n            }\r\n\r\n        case ADD_LOG:\r\n            return {\r\n                ...state,\r\n                logs: [...state.logs, action.payload],\r\n                loading: false\r\n            }\r\n\r\n        case DELETE_LOG:\r\n            return {\r\n                ...state,\r\n                logs: state.logs.filter(log => log.id !== action.payload),\r\n                loading: false\r\n            }\r\n        case UPDATE_LOG:\r\n            return {\r\n                ...state,\r\n                logs: state.logs.map(log => log.id === action.payload.id ? action.payload : log)\r\n            }\r\n        case SEARCH_LOGS:\r\n            return {\r\n                ...state,\r\n                logs: action.payload\r\n            };\r\n        case SET_CURRENT:\r\n            return{\r\n                ...state, \r\n                current: action.payload\r\n            }\r\n        case CLEAR_CURRENT:\r\n            return {\r\n                ...state,\r\n                loading: null\r\n            }\r\n        case SET_LOADING: \r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case LOGS_ERROR:\r\n            console.error(action.payload);\r\n            return {\r\n                ...state.current,\r\n                error: action.payload\r\n                \r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {GET_TECHS, ADD_TECH, DELETE_TECH, SET_LOADING, TECHS_ERROR} from '../actions/types';\r\n  \r\nconst initialState = {\r\ntechs: null,\r\nloading: false,\r\nerror: null\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_TECHS:\r\n        return {\r\n            ...state,\r\n            techs: action.payload,\r\n            loading: false\r\n        };\r\n        case ADD_TECH:\r\n            return {\r\n                ...state,\r\n                techs: [...state.techs, action.payload],\r\n                loading: false\r\n            };\r\n        case DELETE_TECH:\r\n            return {\r\n                ...state,\r\n                techs: state.techs.filter(tech => tech.id !== action.payload),\r\n                loading: false\r\n            };\r\n        case SET_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case TECHS_ERROR:\r\n            console.error(action.payload);\r\n            return {\r\n            ...state,\r\n            error: action.payload,\r\n            loading: false\r\n            };\r\n        default:\r\n        return state;\r\n    }\r\n};","import {combineReducers} from 'redux';\r\nimport logReducer from './logReducer';\r\nimport techReducer from './techReducer';\r\n\r\n\r\nexport default combineReducers({\r\n    log: logReducer,\r\n    tech: techReducer\r\n});\r\n","import {createStore, applyMiddleware} from 'redux';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleWare = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer, \r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleWare))\r\n)\r\n\r\nexport default store","import React, {useEffect, Fragment} from 'react';\nimport SearchBar from './components/layout/SearchBar';\nimport Logs from './components/logs/Logs';\nimport AddBtn from './components/layout/AddBtn';\nimport AddLogModal from './components/logs/AddLogModal';\nimport EditLogModal from './components/logs/EditLogModal';\nimport AddTechModal from './components/techs/AddTechModal';\nimport TechListModal from './components/techs/TechListModal';\nimport {Provider} from 'react-redux';\nimport store from './store';\n\nimport 'materialize-css/dist/css/materialize.min.css';\nimport M from 'materialize-css/dist/js/materialize.min.js';\nimport './App.css';\n\nconst App = () => {\n  useEffect(() => {\n    //this will initialise Materialize JS\n    M.AutoInit();\n  })\n  return (\n    <Provider store={store}>\n      <Fragment>\n        <SearchBar/> \n        <div className=\"container\">\n          <AddBtn/>\n          <AddLogModal/>\n          <EditLogModal/>\n          <AddTechModal/>\n          <TechListModal/>\n          <Logs/>\n        </div>\n      </Fragment>\n    </Provider>\n  )}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}